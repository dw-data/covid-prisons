d = read_sheet("1_xZhBplsH86c5woOEi2qJgNb9qVZ_a_V4S2uo-5pxgE", range = "covidcases",
na = c("","NA"), trim_ws = TRUE) %>%
rename(cases_inmates = `covid-19 cases...7`, deaths_inmates = `deaths related to covid-19...8`,
cases_staff = `covid-19 cases...9`, deaths_staff = `deaths related to covid-19...10`)
d_vax = read_sheet("1_xZhBplsH86c5woOEi2qJgNb9qVZ_a_V4S2uo-5pxgE", range = "vaccineprogress",
na = c("","NA"), trim_ws = TRUE) %>%
select(1:7) %>%
pivot_wider(names_from = `vaccine measure`, values_from = `number among inmates`, values_fill = NA)
d = full_join(d, d_vax, by = c("country", "level", "region", "date", "period"))
names(d)
d %>% group_by(level) %>% summarize(n = length(unique(country)))
d %>% filter(level == "regional") %>% `$`(country) %>% unique
d %>%
group_by(country, date) %>%
filter("regional" %in% level) %>%
mutate(agg = !("national" %in% level)) %>%
group_by(country) %>%
summarise(agg = any(agg))
d_regional = d %>% filter(country %in% c("Germany", "Spain (State Adm.)"), level == "regional")
ggplot(d_regional, aes(date, region)) +
geom_point(aes(size = cases_inmates)) +
geom_text(aes(label = cases_inmates), vjust = -.5, size = 3) +
facet_wrap(~country, ncol = 1, scales = "free_y") +
theme_minimal()
cols_to_mutate = c(7:10,15:17)
#summarize across regions:
tmp = d_regional %>%
group_by(country, region) %>% arrange(country, region,date) %>%
#fill down 0 values, treat NA as 0 for aggregation
fill(cols_to_mutate) %>% mutate(across(cols_to_mutate-2, ~ ifelse(is.na(.), 0, .))) %>%
#calculate differences between points in time within groups
mutate(across(cols_to_mutate-2, ~ . - lag(.,1,default = 0))) %>%
group_by(country, date) %>%
#sum over regions
summarise(across(cols_to_mutate-2, sum, na.rm = T)) %>%
#calculate cumulative cases over time
mutate(across(2:8, cumsum)) %>%
#reintroduce NAs for Spain (State Adm.) cases/deaths staff
mutate(cases_staff = ifelse(country == "Spain (State Adm.)", NA, cases_staff),
deaths_staff = ifelse(country == "Spain (State Adm.)", NA, deaths_staff),
`people with at least 1 dose` = ifelse(country == "Spain (State Adm.)",
NA, `people with at least 1 dose`),
`administered doses` = NA)
write.csv(tmp, "data/processed/cases_deaths_vacc_regional_aggregates.csv", row.names = F, na = "")
#append to complete dataset
d = d %>%
bind_rows(tmp %>% mutate(level = "national", period = "cumulative",
notes = "calculated from regional data"))
ggplot(tmp %>% select(-4,-6) %>% pivot_longer(3:4),
aes(date, value, color = name)) +
geom_line() + facet_wrap(~country)
rm(tmp)
d_noncum = d %>% filter(period != "cumulative")
d_noncum %>% group_by(country, period) %>% summarise(n = n(), min = min(date), max = max(date))
ggplot(d_noncum, aes(date, country)) +
geom_point(aes(size = cases_inmates)) +
scale_x_datetime(expand=expand_scale(mult=c(.05,.25)), date_breaks = "3 months",
date_minor_breaks = "1 month", labels=scales::date_format("%b")) +
theme_minimal()
d_plot = d %>%
group_by(country) %>%
filter(max(date) > as.Date("2021-01-01")) %>%
select(1,4,7:10,15:17) %>%
pivot_longer(3:9) %>%
filter(!is.na(value))
ggplot(d_plot, aes(date, country)) +
geom_point() +
ggtitle(paste("DRAFT: Available data points per country,", Sys.Date()))
ggsave("graphics/preliminary/prisons_covid_data_points.png", device = "png",
width = 7, height = 5)
d_plot = d %>%
group_by(country) %>%
filter(level == "national", period == "cumulative",
!grepl("UK:|Italy", country),
max(date) > as.Date("2021-01-01")) %>%
select(1:10) %>%
mutate(label = paste(country, level, region, sep = ", ")) %>%
pivot_longer(7:10)
ggplot(d_plot) +
geom_line(aes(date, value, colour = country)) +
geom_point(aes(date, value, colour = country)) +
geom_text(data = d_plot %>% group_by(country, name) %>%
filter(!is.na(value)) %>% slice(which.max(date)),
aes(label = country, colour = country, x = date, y = value), hjust = -.1) +
scale_colour_discrete(guide = 'none') +
scale_x_datetime(expand=expand_scale(mult=c(.05,.5))) +
facet_wrap(~name, scales = "free_y") +
ggtitle(paste("DRAFT: COVID-19 Cases & deaths in prisons", Sys.Date()))
ggsave("graphics/preliminary/prisons_covid_cases_absolute.png", device = "png",
width = 9, height = 6)
# ggsave("graphics/preliminary/prisons_covid_cases_absolute_all.png", device = "png",
#        width = 9, height = 6)
#read data
d_pop = read_sheet("1_xZhBplsH86c5woOEi2qJgNb9qVZ_a_V4S2uo-5pxgE", range = "popchange",
col_types = "cncnnnnnncccc",
na = c("","NA"), trim_ws = TRUE) %>%
filter(!is.na(Country)) %>% select(1,3:7) %>%
setNames(c("country", "date", "inmates", "staff", "rel_pop","capacity")) %>%
mutate(date = gsub("-??", "-01", date, fixed = TRUE) %>% as.Date) %>%
filter(!is.na(inmates))
d_national = d %>% filter(level == "national", period == "cumulative") %>% select(1,4,7:10) %>%
left_join(d_pop[-c(4:6)] %>% rename(date_ref = date), by = "country") %>%
mutate(date = as.Date(date), dateDiff = abs(date - date_ref)) %>%
group_by(country, date) %>%
filter(dateDiff == min(dateDiff))
d_national_rel = d_national %>%
pivot_longer(3:6, names_to = "type") %>%
filter(grepl("_inmates",type)) %>%
mutate(type = gsub("_inmates","",type),
value_rel = value/inmates)
d_plot = d_national_rel %>% group_by(country) %>%
filter(!grepl("UK|Italy", country),
max(date) > as.Date("2021-01-01"))
ggplot(d_plot) +
geom_line(aes(date, value_rel, colour = country)) +
geom_point(aes(date, value_rel, colour = country)) +
geom_text(data = d_plot %>% group_by(country, type) %>%
filter(!is.na(value_rel)) %>% slice(which.max(date)),
aes(label = country, colour = country, x = date, y = value_rel), hjust = -.1) +
scale_colour_discrete(guide = 'none') +
scale_x_date(expand=expand_scale(mult=c(.05,.4))) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.01)) +
facet_wrap(~type, scales = "free_y") +
ggtitle(paste("DRAFT: COVID-19 Cases & deaths in prisons", Sys.Date()),
subtitle = "% of inmates that tested positive / died related to COVID-19")
ggsave("graphics/preliminary/prisons_covid_cases_relative.png", device = "png",
width = 9, height = 4)
#ggsave("graphics/preliminary/prisons_covid_cases_relative_all.png", device = "png",
#       width = 9, height = 4)
tmp = d_national_rel %>% group_by(country, type) %>%
select(1:3,7:8) %>%
filter(!is.na(value_rel), max(date) > as.Date("2021-01-01")) %>%
slice(which.max(date)) %>%
arrange(type, -value_rel)
write.csv2(tmp, "data/processed/cases_deaths_ranking_relative.csv", row.names = F, na = "")
tmp %>% filter(type == "cases") %>% mutate(value_rel = round(value_rel*100, 2)) %>% select(-(3:4))
tmp %>% filter(type == "deaths") %>% mutate(value_rel = round(value_rel*10^5)) %>% select(-(3:4))
covid_pop = read.csv("data/raw/owid-covid-data.csv") %>% select(1:4,11,14,42,43) %>%
filter(iso_code %in% c("ALB","AND","ARM","AUT","AZE","BEL","BGR","BIH","CHE","CYP","CZE","DEU","DNK","ESP","EST","FIN","FRA","GBR","GEO","GRC","HRV","HUN","IRL","ISL","ITA","LIE","LTU","LUX","LVA","MCO","MDA","MKD","MNE","NLD","NOR","OWID_EUN","OWID_KOS","OWID_WRL","POL","PRT","ROU","RUS","SMR","SRB","SVK","SVN","SWE","TUR")) %>%
transmute(location, date = as.Date(date),
cases = total_cases_per_million/10^6,
deaths = total_deaths_per_million/10^6,
`people with at least 1 dose` = people_vaccinated_per_hundred/100,
`fully vaccinated people` = people_fully_vaccinated_per_hundred/100) %>%
pivot_longer(3:6, names_to = "type", values_to = "value_population_rel")
d_national_rel = d_national_rel %>% mutate(country_match = country %>%
gsub("UK:.*","United Kingdom",.) %>% gsub(" \\(.+|n Fed\\.", "", .) %>%
gsub(" Rep\\.$", "ia",.))
d_rel_pop = d_national_rel %>%
left_join(covid_pop, by = c("country_match" = "location", "date","type")) %>%
select(1:3,6,8,10) %>%
mutate(diff_percentpoints = (value_rel - value_population_rel)*100,
diff_percent = value_rel / value_population_rel)
d_plot = d_rel_pop %>%
group_by(country, type) %>%
filter(!is.na(value_rel), max(date) > as.Date("2021-01-01"),
date < as.Date("2021-11-01"),
!grepl("Georgia|UK:",country)) %>%
arrange(type, -diff_percent) %>%
slice_max(date) %>%
mutate(label = paste0(country,"\n",date))
write.csv(d_plot, "data/processed/graphic_2_cases_comparison.csv", row.names = F, na = "")
ggplot(d_plot %>% filter(type == "cases", max(date) > as.Date("2021-01-01")),
aes(value_population_rel, value_rel, label = country,
color = (value_population_rel > value_rel))) +
geom_abline(yintercept = 0, slope = 1) +
geom_point() +
geom_text(hjust = -.1, size = 3) +
scale_colour_discrete(guide = 'none') +
scale_x_continuous(limits = c(0,.15), labels = scales::percent_format(accuracy = 1)) +
scale_y_continuous(limits = c(0,.15), labels = scales::percent_format(accuracy = 1)) +
labs(title = paste("DRAFT: COVID-19 Cases in prisons vs general population", Sys.Date()),
subtitle = "Countries above the line have more cases in prison than in the general population.",
x = "", y = "")
ggsave("graphics/preliminary/prisons_covid_comparison_cases.png", device = "png",
width = 7, height = 5)
ggsave("graphics/preliminary/prisons_covid_comparison_cases.svg", device = "svg",
width = 7, height = 5)
# packages used in this markdown document
needs(tidyverse, googlesheets4, svglite)
knitr::opts_knit$set(root.dir = "/Users/schachtk/Documents/DW/xxx_prisons/")
knitr::opts_chunk$set(warning=FALSE, message=FALSE)
## install and load needs, if not yet present
# install.packages("needs")
library(needs)
# packages used in this markdown document
needs(tidyverse, googlesheets4, svglite)
d = read_sheet("1_xZhBplsH86c5woOEi2qJgNb9qVZ_a_V4S2uo-5pxgE", range = "covidcases",
na = c("","NA"), trim_ws = TRUE) %>%
rename(cases_inmates = `covid-19 cases...7`, deaths_inmates = `deaths related to covid-19...8`,
cases_staff = `covid-19 cases...9`, deaths_staff = `deaths related to covid-19...10`)
d_vax = read_sheet("1_xZhBplsH86c5woOEi2qJgNb9qVZ_a_V4S2uo-5pxgE", range = "vaccineprogress",
na = c("","NA"), trim_ws = TRUE) %>%
select(1:7) %>%
pivot_wider(names_from = `vaccine measure`, values_from = `number among inmates`, values_fill = NA)
d = full_join(d, d_vax, by = c("country", "level", "region", "date", "period"))
names(d)
d %>% group_by(level) %>% summarize(n = length(unique(country)))
d %>% filter(level == "regional") %>% `$`(country) %>% unique
d %>%
group_by(country, date) %>%
filter("regional" %in% level) %>%
mutate(agg = !("national" %in% level)) %>%
group_by(country) %>%
summarise(agg = any(agg))
d_regional = d %>% filter(country %in% c("Germany", "Spain (State Adm.)"), level == "regional")
ggplot(d_regional, aes(date, region)) +
geom_point(aes(size = cases_inmates)) +
geom_text(aes(label = cases_inmates), vjust = -.5, size = 3) +
facet_wrap(~country, ncol = 1, scales = "free_y") +
theme_minimal()
cols_to_mutate = c(7:10,15:17)
#summarize across regions:
tmp = d_regional %>%
group_by(country, region) %>% arrange(country, region,date) %>%
#fill down 0 values, treat NA as 0 for aggregation
fill(cols_to_mutate) %>% mutate(across(cols_to_mutate-2, ~ ifelse(is.na(.), 0, .))) %>%
#calculate differences between points in time within groups
mutate(across(cols_to_mutate-2, ~ . - lag(.,1,default = 0))) %>%
group_by(country, date) %>%
#sum over regions
summarise(across(cols_to_mutate-2, sum, na.rm = T)) %>%
#calculate cumulative cases over time
mutate(across(2:8, cumsum)) %>%
#reintroduce NAs for Spain (State Adm.) cases/deaths staff
mutate(cases_staff = ifelse(country == "Spain (State Adm.)", NA, cases_staff),
deaths_staff = ifelse(country == "Spain (State Adm.)", NA, deaths_staff),
`people with at least 1 dose` = ifelse(country == "Spain (State Adm.)",
NA, `people with at least 1 dose`),
`administered doses` = NA)
write.csv(tmp, "data/processed/cases_deaths_vacc_regional_aggregates.csv", row.names = F, na = "")
#append to complete dataset
d = d %>%
bind_rows(tmp %>% mutate(level = "national", period = "cumulative",
notes = "calculated from regional data"))
ggplot(tmp %>% select(-4,-6) %>% pivot_longer(3:4),
aes(date, value, color = name)) +
geom_line() + facet_wrap(~country)
rm(tmp)
d_noncum = d %>% filter(period != "cumulative")
d_noncum %>% group_by(country, period) %>% summarise(n = n(), min = min(date), max = max(date))
ggplot(d_noncum, aes(date, country)) +
geom_point(aes(size = cases_inmates)) +
scale_x_datetime(expand=expand_scale(mult=c(.05,.25)), date_breaks = "3 months",
date_minor_breaks = "1 month", labels=scales::date_format("%b")) +
theme_minimal()
d_plot = d %>%
group_by(country) %>%
filter(max(date) > as.Date("2021-01-01")) %>%
select(1,4,7:10,15:17) %>%
pivot_longer(3:9) %>%
filter(!is.na(value))
ggplot(d_plot, aes(date, country)) +
geom_point() +
ggtitle(paste("DRAFT: Available data points per country,", Sys.Date()))
ggsave("graphics/preliminary/prisons_covid_data_points.png", device = "png",
width = 7, height = 5)
d_plot = d %>%
group_by(country) %>%
filter(level == "national", period == "cumulative",
!grepl("UK:|Italy", country),
max(date) > as.Date("2021-01-01")) %>%
select(1:10) %>%
mutate(label = paste(country, level, region, sep = ", ")) %>%
pivot_longer(7:10)
ggplot(d_plot) +
geom_line(aes(date, value, colour = country)) +
geom_point(aes(date, value, colour = country)) +
geom_text(data = d_plot %>% group_by(country, name) %>%
filter(!is.na(value)) %>% slice(which.max(date)),
aes(label = country, colour = country, x = date, y = value), hjust = -.1) +
scale_colour_discrete(guide = 'none') +
scale_x_datetime(expand=expand_scale(mult=c(.05,.5))) +
facet_wrap(~name, scales = "free_y") +
ggtitle(paste("DRAFT: COVID-19 Cases & deaths in prisons", Sys.Date()))
ggsave("graphics/preliminary/prisons_covid_cases_absolute.png", device = "png",
width = 9, height = 6)
# ggsave("graphics/preliminary/prisons_covid_cases_absolute_all.png", device = "png",
#        width = 9, height = 6)
#read data
d_pop = read_sheet("1_xZhBplsH86c5woOEi2qJgNb9qVZ_a_V4S2uo-5pxgE", range = "popchange",
col_types = "cncnnnnnncccc",
na = c("","NA"), trim_ws = TRUE) %>%
filter(!is.na(Country)) %>% select(1,3:7) %>%
setNames(c("country", "date", "inmates", "staff", "rel_pop","capacity")) %>%
mutate(date = gsub("-??", "-01", date, fixed = TRUE) %>% as.Date) %>%
filter(!is.na(inmates))
d_national = d %>% filter(level == "national", period == "cumulative") %>% select(1,4,7:10) %>%
left_join(d_pop[-c(4:6)] %>% rename(date_ref = date), by = "country") %>%
mutate(date = as.Date(date), dateDiff = abs(date - date_ref)) %>%
group_by(country, date) %>%
filter(dateDiff == min(dateDiff))
d_national_rel = d_national %>%
pivot_longer(3:6, names_to = "type") %>%
filter(grepl("_inmates",type)) %>%
mutate(type = gsub("_inmates","",type),
value_rel = value/inmates)
d_plot = d_national_rel %>% group_by(country) %>%
filter(!grepl("UK|Italy", country),
max(date) > as.Date("2021-01-01"))
ggplot(d_plot) +
geom_line(aes(date, value_rel, colour = country)) +
geom_point(aes(date, value_rel, colour = country)) +
geom_text(data = d_plot %>% group_by(country, type) %>%
filter(!is.na(value_rel)) %>% slice(which.max(date)),
aes(label = country, colour = country, x = date, y = value_rel), hjust = -.1) +
scale_colour_discrete(guide = 'none') +
scale_x_date(expand=expand_scale(mult=c(.05,.4))) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.01)) +
facet_wrap(~type, scales = "free_y") +
ggtitle(paste("DRAFT: COVID-19 Cases & deaths in prisons", Sys.Date()),
subtitle = "% of inmates that tested positive / died related to COVID-19")
ggsave("graphics/preliminary/prisons_covid_cases_relative.png", device = "png",
width = 9, height = 4)
#ggsave("graphics/preliminary/prisons_covid_cases_relative_all.png", device = "png",
#       width = 9, height = 4)
tmp = d_national_rel %>% group_by(country, type) %>%
select(1:3,7:8) %>%
filter(!is.na(value_rel), max(date) > as.Date("2021-01-01")) %>%
slice(which.max(date)) %>%
arrange(type, -value_rel)
write.csv2(tmp, "data/processed/cases_deaths_ranking_relative.csv", row.names = F, na = "")
tmp %>% filter(type == "cases") %>% mutate(value_rel = round(value_rel*100, 2)) %>% select(-(3:4))
tmp %>% filter(type == "deaths") %>% mutate(value_rel = round(value_rel*10^5)) %>% select(-(3:4))
covid_pop = read.csv("data/raw/owid-covid-data.csv") %>% select(1:4,11,14,42,43) %>%
filter(iso_code %in% c("ALB","AND","ARM","AUT","AZE","BEL","BGR","BIH","CHE","CYP","CZE","DEU","DNK","ESP","EST","FIN","FRA","GBR","GEO","GRC","HRV","HUN","IRL","ISL","ITA","LIE","LTU","LUX","LVA","MCO","MDA","MKD","MNE","NLD","NOR","OWID_EUN","OWID_KOS","OWID_WRL","POL","PRT","ROU","RUS","SMR","SRB","SVK","SVN","SWE","TUR")) %>%
transmute(location, date = as.Date(date),
cases = total_cases_per_million/10^6,
deaths = total_deaths_per_million/10^6,
`people with at least 1 dose` = people_vaccinated_per_hundred/100,
`fully vaccinated people` = people_fully_vaccinated_per_hundred/100) %>%
pivot_longer(3:6, names_to = "type", values_to = "value_population_rel")
d_national_rel = d_national_rel %>% mutate(country_match = country %>%
gsub("UK:.*","United Kingdom",.) %>% gsub(" \\(.+|n Fed\\.", "", .) %>%
gsub(" Rep\\.$", "ia",.))
d_rel_pop = d_national_rel %>%
left_join(covid_pop, by = c("country_match" = "location", "date","type")) %>%
select(1:3,6,8,10) %>%
mutate(diff_percentpoints = (value_rel - value_population_rel)*100,
diff_percent = value_rel / value_population_rel)
d_plot = d_rel_pop %>%
group_by(country, type) %>%
filter(!is.na(value_rel), max(date) > as.Date("2021-01-01"),
date < as.Date("2021-11-01"),
!grepl("Georgia|UK:",country)) %>%
arrange(type, -diff_percent) %>%
slice_max(date) %>%
mutate(label = paste0(country,"\n",date))
write.csv(d_plot, "data/processed/graphic_2_cases_comparison.csv", row.names = F, na = "")
ggplot(d_plot %>% filter(type == "cases", max(date) > as.Date("2021-01-01")),
aes(value_population_rel, value_rel, label = country,
color = (value_population_rel > value_rel))) +
geom_abline(yintercept = 0, slope = 1) +
geom_point() +
geom_text(hjust = -.1, size = 3) +
scale_colour_discrete(guide = 'none') +
scale_x_continuous(limits = c(0,.15), labels = scales::percent_format(accuracy = 1)) +
scale_y_continuous(limits = c(0,.15), labels = scales::percent_format(accuracy = 1)) +
labs(title = paste("DRAFT: COVID-19 Cases in prisons vs general population", Sys.Date()),
subtitle = "Countries above the line have more cases in prison than in the general population.",
x = "", y = "")
ggsave("graphics/preliminary/prisons_covid_comparison_cases.png", device = "png",
width = 7, height = 5)
ggsave("graphics/preliminary/prisons_covid_comparison_cases.svg", device = "svg",
width = 7, height = 5)
ggplot(d_plot %>% filter(type == "deaths", max(date) > as.Date("2021-01-01")),
aes(value_population_rel, value_rel, label = country,
color = (value_population_rel > value_rel))) +
geom_abline(yintercept = 0, slope = 1) +
geom_point() +
geom_text(hjust = -.1, size = 3) +
scale_colour_discrete(guide = 'none') +
scale_x_continuous(limits = c(0,.0035), labels = scales::percent_format(accuracy = .01)) +
scale_y_continuous(limits = c(0,.0035), labels = scales::percent_format(accuracy = .01)) +
labs(title = paste("DRAFT: COVID-19 Deaths in prisons vs general population", Sys.Date()),
subtitle = "Countries above the line have more COVID-19 deaths in prison than in the general population",
x = "", y = "")
ggsave("graphics/preliminary/prisons_covid_comparison_deaths.png", device = "png",
width = 7, height = 5)
tmp = d_rel_pop %>% group_by(country, type) %>%
filter(!is.na(value_rel), max(date) > as.Date("2021-01-01")) %>%
slice(which.max(date)) %>%
arrange(type, -diff_percent)
write.csv2(tmp, "data/processed/cases_deaths_ranking_population_comparison.csv", row.names = F, na = "")
tmp %>% filter(type == "cases") %>% mutate(value_rel = round(value_rel*100, 2))
tmp %>% filter(type == "deaths") %>% mutate(value_rel = round(value_rel*10^5))
tmp = d_national %>% group_by(country) %>%
select(1:4) %>%
filter(!is.na(cases_inmates), !is.na(deaths_inmates)) %>%
slice(which.max(date)) %>%
mutate(cfr = deaths_inmates / cases_inmates) %>%
arrange(-cfr)
tmp = tmp %>%
mutate(country_match = country %>%
gsub("UK:.*","United Kingdom",.) %>% gsub(" \\(.+|n Fed\\.", "", .) %>%
gsub(" Rep\\.$", "ia",.)) %>%
left_join(covid_pop %>%
pivot_wider(names_from = type, values_from = value_population_rel) %>%
transmute(location, date, cfr_population = deaths/cases),
by = c("country_match" = "location", "date")) %>%
mutate(diff_percentpoints = (cfr - cfr_population)*100,
diff_percent = cfr / cfr_population) %>%
arrange(diff_percent)
write.csv2(tmp, "data/processed/cfr_comparison_population.csv", row.names = F, na = "")
d_plot = tmp %>% filter(!is.infinite(cfr))
ggplot(d_plot, aes(cfr_population, cfr, label = country,
color = (cfr_population > cfr))) +
geom_abline(yintercept = 0, slope = 1) +
geom_point() +
geom_text(hjust = -.1, size = 3) +
scale_colour_discrete(guide = 'none') +
scale_x_continuous(limits = c(0,.06), labels = scales::percent_format(accuracy = 1)) +
scale_y_continuous(limits = c(0,.06), labels = scales::percent_format(accuracy = 1)) +
labs(title = paste("DRAFT: COVID-19 Case fatality rate in prisons vs general population", Sys.Date()),
subtitle = "Reported deaths in % of Covid-19 cases. Countries above the line have a higher CFR in prison than in the general population.",
x = "", y = "")
ggsave("graphics/preliminary/prisons_covid_comparison_cfr.png", device = "png",
width = 7, height = 5)
d_vax = d %>% ungroup %>%
filter(level == "national", date > as.Date("2021-01-01"),
!(is.na(`people with at least 1 dose`) & is.na(`fully vaccinated people`))) %>%
select(1,4,15,17) %>%
left_join(d_pop[-(4:5)] %>% rename(date_ref = date), by = "country") %>%
mutate(date = as.Date(date), dateDiff = abs(date - date_ref)) %>%
group_by(country, date) %>%
filter(dateDiff == min(dateDiff)) %>%
select(-date_ref, -dateDiff) %>%
pivot_longer(3:4) %>%
mutate(value_rel = value/inmates)
d_plot = d_vax %>% filter(!is.na(value_rel), country != "Germany")
ggplot(d_plot) +
geom_line(aes(date, value_rel, colour = country)) +
geom_point(aes(date, value_rel, colour = country)) +
geom_text(data = d_plot %>% group_by(country, name) %>% slice(which.max(date)),
aes(label = country, colour = country, x = date, y = value_rel), hjust = -.1) +
scale_colour_discrete(guide = 'none') +
scale_x_date(expand=expand_scale(mult=c(.05,.25)), date_breaks = "3 months",
date_minor_breaks = "1 month", labels=scales::date_format("%b")) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(0,1)) +
facet_wrap(~name) +
ggtitle(paste("DRAFT: COVID-19 vaccinations in prisons", Sys.Date()),
subtitle = "% of inmates vaccinated against COVID-19")
ggsave("graphics/preliminary/prisons_covid_vaccinations.png", device = "png",
width = 9, height = 4)
d_vax_pop = d_vax %>%
mutate(country_match = country %>%
gsub("UK:.*","United Kingdom",.) %>% gsub(" \\(.+|n Fed\\.", "", .) %>%
gsub(" Rep\\.$", "ia",.)) %>%
left_join(covid_pop %>% rename(date_ref = date) %>% filter(!is.na(value_population_rel)),
by = c("country_match" = "location", "name" = "type")) %>%
mutate(date = as.Date(date), dateDiff = abs(date - date_ref)) %>%
group_by(country, date) %>%
filter(dateDiff == min(dateDiff)) %>%
select(-date_ref, -dateDiff,-country_match)
d_plot = d_vax_pop %>%
group_by(country, name) %>%
filter(max(date) > as.Date("2021-06-01"),
!(country %in% c("Malta","Monaco","Germany",
"UK: Engl. & Wales","UK: North. Ireland","UK: Scotland"))) %>%
arrange(date) %>%
slice_max(date) %>%
mutate(label = paste(country,gsub("2021-","",date))) %>% ungroup
d_plot$label = factor(d_plot$label, levels = d_plot %>%
filter(!is.na(value_rel)) %>% arrange(value_rel) %>% `$`(label) %>% unique)
ggplot(d_plot, aes(value_rel, label, fill = name)) +
geom_col(position = position_dodge2(preserve = "single")) +
geom_point(aes(x = value_population_rel), pch = 21, position = "dodge") +
scale_x_continuous(limits = c(0,1),labels = scales::percent_format(accuracy = 1)) +
theme_light() +
labs(title = "DRAFT: COVID-19 Vaccinations in prisons vs general population",
subtitle = "Bars are values in prison, dots are values in population",
x = "", y = "")
ggsave("graphics/preliminary/prisons_covid_comparison_vaccinations.png", device = "png",
width = 7, height = 5)
ggsave("graphics/preliminary/prisons_covid_comparison_vaccinations.svg", device = "svg",
width = 7, height = 5)
d_crowding = d_pop %>% arrange(country, date) %>%
mutate(cap_extrapolated = is.na(capacity)) %>%
fill(capacity, .direction = "down") %>%
mutate(density = inmates/capacity,
overcrowded = density > 1)
d_plot = d_crowding %>%
filter(!(country %in% c("Andorra","Armenia","Azerbaijan","BH: Rep. Srpska",
"Georgia","Iceland","Liechtenstein","Monaco",
"North Macedonia","Russian Fed.","San Marino","Turkey",
"UK: Engl. & Wales","UK: North. Ireland","UK: Scotland",
"Spain (Catalonia)","Spain (State Adm.)"))) %>%
group_by(country) %>%
filter(date == as.Date("2020-01-01"))
ggplot(d_plot, aes(density, reorder(country, density))) +
geom_vline(xintercept = 1) +
geom_col() +
scale_x_continuous(labels = scales::percent_format(accuracy = 1)) +
theme_light() +
labs(title = "DRAFT: Overcrowding in European prisons, start of the pandemic",
subtitle = "Number of inmates vs. official capacity",
x = "", y = "share of capacity filled")
ggsave("graphics/preliminary/prisons_covid_overcrowding.png", device = "png",
width = 7, height = 5)
ggsave("graphics/preliminary/prisons_covid_overcrowding.svg", device = "svg",
width = 7, height = 5)
d_plot = x %>%
filter(!(country %in% c("Andorra","Armenia","Azerbaijan","BH: Rep. Srpska",
"Georgia","Iceland","Liechtenstein","Malta","Monaco",
"North Macedonia","Russian Fed.","San Marino","Turkey",
"UK: Engl. & Wales","UK: North. Ireland","UK: Scotland",
"Spain (Catalonia)","Spain (State Adm.)"))) %>%
group_by(country) %>%
mutate(change = (density - lag(density, 1)) > 0,
category = ifelse(all(!change, na.rm = T), "decrease",
ifelse(!nth(change, 2) & last(change), "u turn",
ifelse(nth(change, 2) & !last(change), "n turn","other"))))
